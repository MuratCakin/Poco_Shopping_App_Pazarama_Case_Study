// Generated by view binder compiler. Do not edit!
package com.muratcakin.poco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.muratcakin.poco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSignIn;

  @NonNull
  public final Button btnSignInPage2;

  @NonNull
  public final Button btnSignUpPage;

  @NonNull
  public final ImageView ivPoco;

  @NonNull
  public final TextInputLayout tiPassword;

  @NonNull
  public final TextInputLayout tiUsername;

  @NonNull
  public final TextView tvWelcome;

  private FragmentSignInBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSignIn, @NonNull Button btnSignInPage2,
      @NonNull Button btnSignUpPage, @NonNull ImageView ivPoco, @NonNull TextInputLayout tiPassword,
      @NonNull TextInputLayout tiUsername, @NonNull TextView tvWelcome) {
    this.rootView = rootView;
    this.btnSignIn = btnSignIn;
    this.btnSignInPage2 = btnSignInPage2;
    this.btnSignUpPage = btnSignUpPage;
    this.ivPoco = ivPoco;
    this.tiPassword = tiPassword;
    this.tiUsername = tiUsername;
    this.tvWelcome = tvWelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignIn;
      MaterialButton btnSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btnSignIn == null) {
        break missingId;
      }

      id = R.id.btnSignInPage2;
      Button btnSignInPage2 = ViewBindings.findChildViewById(rootView, id);
      if (btnSignInPage2 == null) {
        break missingId;
      }

      id = R.id.btnSignUpPage;
      Button btnSignUpPage = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUpPage == null) {
        break missingId;
      }

      id = R.id.ivPoco;
      ImageView ivPoco = ViewBindings.findChildViewById(rootView, id);
      if (ivPoco == null) {
        break missingId;
      }

      id = R.id.tiPassword;
      TextInputLayout tiPassword = ViewBindings.findChildViewById(rootView, id);
      if (tiPassword == null) {
        break missingId;
      }

      id = R.id.tiUsername;
      TextInputLayout tiUsername = ViewBindings.findChildViewById(rootView, id);
      if (tiUsername == null) {
        break missingId;
      }

      id = R.id.tvWelcome;
      TextView tvWelcome = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcome == null) {
        break missingId;
      }

      return new FragmentSignInBinding((ConstraintLayout) rootView, btnSignIn, btnSignInPage2,
          btnSignUpPage, ivPoco, tiPassword, tiUsername, tvWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
